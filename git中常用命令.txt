git中常用命令：
git init --初始化git仓库

提交文件到仓库：
	git add .
	git commit -m "初始化项目版本"

从git仓库中拉取项目：
	git clone <repo>

编辑git配置文件：
	git config -e #针对当前仓库
	git config -e --global #针对系统上的所有仓库
	
设置提交代码时的用户信息：
	git config --global user.name "姓名"
	git config --global user.emal <email邮箱>
	
查看当前仓库的状态，显示有变更的文件：
	git status
	
比较文件的不同，即暂存区和工作区的区别
	git diff
	
提交暂存区到本地仓库
	git commit -m "git中常用命令"
	
删除工作区的文件：
	git rm
	
移动或重命名工作区文件：
	git mv
	
以列表的形式查看指定文件的修改历史：
	git blame <file>
	

显示最近到最远提交的日志：
	git log
	git log --pretty=oneline 
	
回退版本：
	git reset --hard <版本号>
	
回退到历史版本后，又想回到最新版本,重返未了：
	git reflog
	
工作区和暂存区;
	工作区（working directory），就是你电脑能看到的目录；
	版本库（repository），工作区有个隐藏的目录.git,这个不是工作区，而是版本库；
	暂存区（index或stage），一般存放在.git目录下的index文件（.git/index）.
		我们往git版本库中添加文件的时候，分成两步：
		第一步是用git add 把文件添加进去，实际上就是把文件修改添加到暂存区
		第二步是用git commi提交更改，实际上就是把暂存区中的所有内容提交到了版本库

当修改乱了工作区中的某个内容，想直接丢弃工作区的修改：
	git checkout -- <file>
	
当你不但改乱了工作区的某个文件内容，还添加到了暂存区，想放弃修改：
	第一步：git reset head <file>
	第二步：git checkout -- file 
	
	
创建一个dev分支，并切换到dev分支上：
	git checkout -b dev
	
创建一个dev分支：
	git branch dev

切换到dev分支上：
	git checkout dev

查看分支：
	git branch
	
合并分支：
	git merge dev 
	
删除分支：
	git branch -d dev
	
最新版本的切换分支使用switch:
	git switch -c dev
	git switch master
	
查看分支合并图：
	git log --graph
	
本地仓库与远程仓库相连：
	git remote add <远程仓库的地址>

把本地仓库的内容推送到远程仓库上去：
	git push -u origin master #第一次推送
	git push origin master #下次推送
	
从远程仓库克隆：
	git clone <git远程仓库地址>
	

	