linux脚本中几个参数的意思
	$#:传入脚本的参数个数
	$0：脚本自身的名称
	$1:传入脚本的第一个参数
	$2:传入脚本的第二个参数
	$@:传入脚本的所有参数
	$*:传入脚本的所有参数
	$$:脚本执行的进程id
	$?:上一条命令执行后的状态，结果为0表示正常，结果为1表述执行异常

linux中常用的关机命令：
	shutdown 会给系统计划一个时间关机。它可以被用户停止、关机、重启机器。
		shutdown
		shutdown now
		shutdown 13:20
		shutdown -p now  ###关闭机器
		shutdown -H now  ###停止机器
		shutdown -r09:35 ###在09：35重启机器
		要取消即将进行的关机，只要输入下面命令： shutdown -c

	halt 通知硬件来停止所有cpu功能，但仍然保持通电。
		halt ###停止机器
		halt -p ###关闭机器
		halt --reboot ###重启机器

	poweroff 会发送一个acpi信号来通知系统关机
		poweroff ###关闭机器
		poweroff --halt ###停止机器
		poweroff --reboot ###重启机器


	shutdown 以一种安全的方式关闭系统。所有登陆用户都可以看到关机信息提示，并且 login  将被阻塞。
	halt命令，若系统的 runlevel 为 0 或 6 ，则关闭系统，否则以 shutdown 指令（加上 -h 参数）来取代。
	poweroff命令用来关闭计算机操作系统并且切断系统电源。
	reboot执行reboot指令可让系统停止运作，并重新开机。


linux查看进程：
	命令：ps aux
	USER:该进程是由哪个用户产生的
	PID：进程的id号
	%CPU：该进程占用cpu资源的百分比，占用越高，进程越耗资源
	%MEM：该进程占用物理内存的百分比，占用越高，进程越耗费资源
	VSZ:该进展占用虚拟内存的大小，单位KB
	RSS:该进程占用实际物理内存大小，单位KB
	TTY:该进程时在那个终端中运行的。其中tty1-tty7代表本地控制台终端，tty1-tty6时本地字符终端，tty7是图形终端。pts/0-255d代表虚拟终端。

	STAT:进程状态。常见的状态有：
		R:运行
		S:睡眠
		T:停止状态
		s:包含子进程
		+：位于后台

	START:该进程启动的时间
	TIME:该进程占用cpu的运算时间，注意不是系统时间
	COMMAND:产生此进程的命令名

查看系统健康状态：
	命令：top [选项]
	选项：
		-d 秒数：指定top命令每隔几秒更新。默认是3秒
		-b:使用批处理模式输出
		-n [次数]： 指定top命令执行的次数。一般和“-b”选项合用
		？或h:显示交互模式的帮助
		P:以cpu使用率排序，默认就是此项
		M:以内存的使用率排序
		N:以pid排序
		q:退出top

		[vagrant@worker1 ~]$ top
        top - 07:14:23 up  2:24,  1 user,  load average: 0.11, 0.07, 0.06
        Tasks:  82 total,   1 running,  81 sleeping,   0 stopped,   0 zombie
        %Cpu(s):  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
        KiB Mem :  1014764 total,   371296 free,   288920 used,   354548 buff/cache
        KiB Swap:  2097148 total,  2097148 free,        0 used.   572104 avail Mem

        第一行：
        	07:14:23  -----------系统当前时间
        	up  2:24  -----------系统运行的时间
			1 user    -----------当前登录的用户
			load average: 0.11, 0.07, 0.06  ------系统在之前1分钟，5分钟，15分钟的平均负载。一般认为小于1时，负载小。如果大于1时，系统已超过负载。（具体要看系统有几个cpu）		        

	    第二行：
	    	Tasks:  82 total --------系统中的进程数
	    	1 running        --------正在运行的进程数
	    	81 sleeping      --------睡眠的进程
	    	0 stopped        --------正在停止的进程   
	    	0 zombie         --------僵尸进程。如果不是0，需要手工检查僵尸进程

	    第三行：
	    	0.0 us  ----  用户模式占用的cpu百分比 
	    	0.0 sy  ----  系统模式占用的cpu百分比  
	    	0.0 ni  ----  改变过优先级的用户进程占用cpu的百分比
	    	100.0 id----  空闲cpu的cpu的百分比
	    	0.0 wa  ----  等待输入/输入的cpu进程占用cpu百分比
	    	0.0 hi  ----  硬中断请求服务占用cpu百分比
	    	0.0 si  ----  软中断请求服务占用cpu的百分比  
	    	0.0 st  ----  st(steal time)虚拟时间百分比。就当有虚拟机时，虚拟cpu等待实际cpu的时间百分比

	    第四行：
	    	KiB Mem :  1014764 total ------- 总内存大小
	    	371296 free  -------  空闲的内存大小
	    	288920 used  -------  已使用内存大小
            cached(缓存)：加速数据的读取过程
	    	buffer(缓冲)：加速写入过程

	    第五行：
	    	KiB Swap:  2097148 total   ----  swap交换分区总空间大小
	    	2097148 free               ----  swap未使用空间大小
	    	0 used                     ----  已使用swap空间大小


linux把服务放在后台运行：
	命令：
		[commod] &  把命令放到后台执行 
		ctrl+Z 正在运行中的程序放到后台，并且暂停
	    jobs： 可以查看在后台运行的程序
	    fg：用于将后台运行的或挂起的任务（或作业）切换到前台运行
	    bg：将一个后台暂停的命令继续运行

linux中系统资源查看：
	命令：  vmstat 1 3
	    [root@iz2ze06umbj6xzf02r6luvz ~]# vmstat 1 3
		procs -----------memory---------- ---swap-- -----io---- -system-- ------cpu-----
		 r  b   swpd   free   buff  cache   si   so    bi    bo   in   cs us sy id wa st
		 5  0      0  86900 104456 549264    0    0     0     9    1    4  1  1 98  0  0
		 0  0      0  86776 104456 549248    0    0     0     0 1354 2878  1  0 99  0  0
		 0  0      0  86652 104456 549252    0    0     0     0 1392 2899  3  1 96  0  0
	procs:进程信息字段
	- r : 等待运行的进程数量，数量越大，系统越繁忙
	- b : 不可被唤醒的进程数量，数量越大系统越繁忙
	memory:内存信息字段
	- swpd : 虚拟内存使用的情况，单位KB
	- free : 空闲的内存容量，单位KB
	- buff : 缓冲区内存容量，单位KB
	- cache : 缓存的内存容量，单位KB
	swaf:交换分区的信息字段：
	- si : 从磁盘中交换到内存中数据的数量，单位kb
	- so : 从内存中交换到磁盘中数据的数量，单位kb
		此两个数据越大，证明数据需要经常在磁盘和内存之间交换，系统性能越差。
	IO:磁盘读写信息字段
	- bi : 从块设备读入数据的总量，单位是块
	- bo : 写到块设备的数据的总量，单位是块。此两个数据越大，代表系统I/O越繁忙。
	system:系统信息字段
	- in： 每秒被中断的进程次数
	- cs : 每秒钟进行的事件切换次数。
		此两个数据越大，代表系统与接口设备通信越繁忙
	CPU:cpu信息字段
	- us : 非内核进程消耗cpu运算时间的百分比
	- sy : 内核进程销号cpu运算时间的百分比
	- id : 空闲cpu百分比
	- wa : 等待I/O所消耗的cpu百分比
	- st : 被虚拟及所盗用的cpu百分比

查看cpu的相关信息：
	命令：dmesg | grep cpu
    	[root@iz2ze06umbj6xzf02r6luvz ~]# dmesg | grep cpu
    	[    0.000000] Initializing cgroup subsys cpuset
    	[    0.000000] Initializing cgroup subsys cpu
    	[    0.000000] Initializing cgroup subsys cpuacct
    	[    0.000000] x86 PAT enabled: cpu 0, old 0x7040600070406, new 0x7010600070106
    	[    0.000000] kvm-clock: cpu 0, msr 0:3ff69001, primary cpu clock
    	[    0.000000] setup_percpu: NR_CPUS:5120 nr_cpumask_bits:1 nr_cpu_ids:1 nr_node_ids:1
    	[    0.000000] PERCPU: Embedded 33 pages/cpu @ffff88003fc00000 s96728 r8192 d30248 u2097152
    	[    0.000000] pcpu-alloc: s96728 r8192 d30248 u2097152 alloc=1*2097152
    	[    0.000000] pcpu-alloc: [0] 0 
    	[    0.000000] KVM setup async PF for cpu 0
    	[    0.000000] kvm-stealtime: cpu 0, msr 3fc0f3c0
    	[    0.000000] 	RCU restricting CPUs from NR_CPUS=5120 to nr_cpu_ids=1.
    	[    1.014105] cpuidle: using governor menu

查看内存使用状态：
	命令： free [-b][-k][-m][-g]
		-b : 以字节为单位显示
		-k : 以kb为单位显示，默认就是kb为单位
		-b : 以mb为单位显示
		-g : 以gb为单位显示

查看cpu信息：
	cat /proc/cpuinfo

命令：uptime
	显示系统的启动时间和平均负载，也就是top命令的第一行。w命令也可以看到这个数据。

查看系统与内核相关信息：
	uname -a

判断当前系统的位数：
	file /bin/ls

查看linux系统的发行版本：
	lsb_release -a

缓存和缓冲的区别：
	简单来说缓存（cache）是用来加速数据从硬盘中“读取”的，而缓冲（buffer）是用来加速数据“写入”硬盘的。

